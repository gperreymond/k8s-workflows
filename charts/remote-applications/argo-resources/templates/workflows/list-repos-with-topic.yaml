---
apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: list-repos-with-topic
spec:
  schedule: '*/5 * * * *'
  workflowSpec:
    entrypoint: check-all-repos
    templates:
      - name: list-repos
        serviceAccountName: argo-resources
        container:
          image: alpine:latest
          command: [sh, -c]
          args:
            - |
              apk add --no-cache curl jq
              USER="gperreymond"
              TOPIC="argo-workflow"
              URL="https://api.github.com/users/$USER/repos"
              response=$(curl -s "$URL")
              if [ $? -ne 0 ]; then
                echo "Error making request to the GitHub API."
                exit 1
              fi
              echo $response > response.json
              cat response.json | jq -r '.[] | select(.topics[]? == "'$TOPIC'")| .name' > filter.txt
              jq -R -s -c 'split("\n") | map(select(length > 0))' filter.txt > /tmp/output.json
              echo "List of $USER's repositories with the topic '$TOPIC':"
              cat /tmp/output.json | jq
        outputs:
          parameters:
            - name: repos
              valueFrom:
                path: /tmp/output.json
      - name: check-file-in-repos
        serviceAccountName: argo-resources
        inputs:
          parameters:
            - name: repo
        container:
          image: alpine:latest
          command: [sh, -c]
          args:
            - |
              apk add --no-cache curl jq
              USER="gperreymond"
              REPO="{{ `{{inputs.parameters.repo}}` }}"
              URL="https://api.github.com/repos/$USER/$REPO/contents/.argo-workflow.yaml"
              response=$(curl -s "$URL")
              if [ $? -ne 0 ]; then
                echo "Error making request to the GitHub API."
                exit 1
              fi
              if echo "$response" | jq -e '.name == ".argo-workflow.yaml"' > /dev/null; then
                echo "File .argo-workflow.yaml exists in repository $REPO."
              else
                echo "File .argo-workflow.yaml does not exist in repository $REPO."
              fi
      - name: check-all-repos
        steps:
          - - name: list-repos
              template: list-repos
          - - name: check-file-in-repos
              template: check-file-in-repos
              arguments:
                parameters:
                - name: repo
                  value: "{{ `{{item}}` }}"
              withParam: "{{ `{{steps.list-repos.outputs.parameters.repos}}` }}"
